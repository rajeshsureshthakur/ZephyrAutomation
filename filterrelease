JComboBox<String> releaseComboBox = new JComboBox<>();
JTextField searchField = new JTextField(20);
DefaultComboBoxModel<String> originalModel = (DefaultComboBoxModel<String>) releaseComboBox.getModel();

searchField.addKeyListener(new KeyAdapter() {
    @Override
    public void keyPressed(KeyEvent e) {
        if(e.getKeyCode() == KeyEvent.VK_ENTER) {
            String searchText = searchField.getText().trim().toLowerCase();
            
            // Filter the items
            DefaultComboBoxModel<String> filteredModel = new DefaultComboBoxModel<>();
            for(int i = 0; i < originalModel.getSize(); i++) {
                String item = originalModel.getElementAt(i);
                if(item.toLowerCase().contains(searchText)) {
                    filteredModel.addElement(item);
                }
            }
            
            // Set filtered model and show dropdown
            releaseComboBox.setModel(filteredModel);
            releaseComboBox.showPopup();
        }
    }
});



import javax.swing.DefaultComboBoxModel;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;


// Add a reset button or clear search field functionality
JButton resetButton = new JButton("Reset");
resetButton.addActionListener(e -> {
    releaseComboBox.setModel(originalModel);
    searchField.setText("");
});
