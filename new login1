import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.IOException;
import javax.imageio.ImageIO;
import java.awt.image.BufferedImage;
import java.net.URL;
import java.awt.font.TextAttribute;
import java.util.HashMap;
import java.util.Map;

public class LoginScreen extends JFrame {
    
    private JTextField userIdField;
    private JPasswordField passwordField;
    private JLabel statusLabel;
    private BufferedImage backgroundImage;
    
    public LoginScreen() {
        setTitle("Login - Test Management Application");
        setSize(500, 600);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setResizable(false);
        
        // Try to load background image
        try {
            // Replace this URL with your actual image path
            backgroundImage = ImageIO.read(new URL("https://example.com/path/to/your/image.jpg"));
        } catch (IOException e) {
            // If image loading fails, create a gradient background instead
            backgroundImage = createGradientBackground(500, 600);
        }
        
        // Use custom panel with background image
        setContentPane(new BackgroundPanel(backgroundImage));
        
        // Set custom layout
        setLayout(null);
        
        // Create components
        initComponents();
        
        setVisible(true);
    }
    
    private void initComponents() {
        // App title
        JLabel titleLabel = new JLabel("Test Management Application");
        titleLabel.setFont(new Font("Arial", Font.BOLD, 24));
        titleLabel.setForeground(Color.WHITE);
        titleLabel.setBounds(60, 60, 380, 40);
        titleLabel.setHorizontalAlignment(SwingConstants.CENTER);
        add(titleLabel);
        
        // Create a white semi-transparent panel for login form
        JPanel loginPanel = new JPanel() {
            @Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                Graphics2D g2d = (Graphics2D) g.create();
                g2d.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.85f));
                g2d.setColor(Color.WHITE);
                g2d.fillRoundRect(0, 0, getWidth(), getHeight(), 20, 20);
                g2d.dispose();
            }
        };
        loginPanel.setBounds(60, 120, 380, 350);
        loginPanel.setOpaque(false);
        loginPanel.setLayout(null);
        add(loginPanel);
        
        // Login form title
        JLabel loginTitle = new JLabel("Sign In");
        loginTitle.setFont(new Font("Arial", Font.BOLD, 20));
        loginTitle.setForeground(new Color(50, 50, 50));
        loginTitle.setBounds(0, 20, 380, 30);
        loginTitle.setHorizontalAlignment(SwingConstants.CENTER);
        loginPanel.add(loginTitle);
        
        // User ID label and field
        JLabel userIdLabel = new JLabel("User ID:");
        userIdLabel.setFont(new Font("Arial", Font.PLAIN, 14));
        userIdLabel.setBounds(40, 70, 100, 25);
        loginPanel.add(userIdLabel);
        
        userIdField = new JTextField();
        userIdField.setBounds(40, 95, 300, 35);
        userIdField.setFont(new Font("Arial", Font.PLAIN, 14));
        userIdField.setBorder(BorderFactory.createCompoundBorder(
                BorderFactory.createLineBorder(new Color(200, 200, 200)),
                BorderFactory.createEmptyBorder(5, 10, 5, 10)));
        loginPanel.add(userIdField);
        
        // Password label and field
        JLabel passwordLabel = new JLabel("Password:");
        passwordLabel.setFont(new Font("Arial", Font.PLAIN, 14));
        passwordLabel.setBounds(40, 140, 100, 25);
        loginPanel.add(passwordLabel);
        
        passwordField = new JPasswordField();
        passwordField.setBounds(40, 165, 300, 35);
        passwordField.setBorder(BorderFactory.createCompoundBorder(
                BorderFactory.createLineBorder(new Color(200, 200, 200)),
                BorderFactory.createEmptyBorder(5, 10, 5, 10)));
        loginPanel.add(passwordField);
        
        // Passcode hint text
        JLabel passcodeHint = new JLabel("Enter your 4 digit passcode");
        passcodeHint.setFont(new Font("Arial", Font.ITALIC, 12));
        passcodeHint.setForeground(new Color(100, 100, 100));
        passcodeHint.setBounds(40, 205, 200, 20);
        loginPanel.add(passcodeHint);
        
        // Forgot password link
        JLabel forgotPassword = new JLabel("Forgot?");
        forgotPassword.setFont(new Font("Arial", Font.PLAIN, 12));
        forgotPassword.setForeground(new Color(0, 120, 215));
        forgotPassword.setBounds(280, 205, 60, 20);
        
        // Add underline to the forgot password text
        Font forgotFont = forgotPassword.getFont();
        Map<TextAttribute, Object> attributes = new HashMap<>(forgotFont.getAttributes());
        attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        forgotPassword.setFont(forgotFont.deriveFont(attributes));
        
        forgotPassword.setCursor(new Cursor(Cursor.HAND_CURSOR));
        forgotPassword.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                JOptionPane.showMessageDialog(LoginScreen.this, 
                        "Password reset functionality will be implemented here.", 
                        "Forgot Password", 
                        JOptionPane.INFORMATION_MESSAGE);
            }
        });
        loginPanel.add(forgotPassword);
        
        // Login button
        JButton loginButton = new JButton("Login");
        loginButton.setBounds(40, 240, 300, 40);
        loginButton.setFont(new Font("Arial", Font.BOLD, 14));
        loginButton.setBackground(new Color(0, 120, 215));
        loginButton.setForeground(Color.WHITE);
        loginButton.setFocusPainted(false);
        loginButton.setBorderPainted(false);
        loginButton.setCursor(new Cursor(Cursor.HAND_CURSOR));
        loginButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Validate login
                String userId = userIdField.getText();
                String password = new String(passwordField.getPassword());
                
                if (userId.isEmpty() || password.isEmpty()) {
                    statusLabel.setText("Please enter your credentials");
                    statusLabel.setForeground(Color.RED);
                } else {
                    // Here you would check the credentials against a database
                    statusLabel.setText("Login successful!");
                    statusLabel.setForeground(new Color(0, 150, 0));
                }
            }
        });
        loginPanel.add(loginButton);
        
        // Status label for login messages
        statusLabel = new JLabel("");
        statusLabel.setFont(new Font("Arial", Font.PLAIN, 12));
        statusLabel.setBounds(40, 285, 300, 20);
        statusLabel.setHorizontalAlignment(SwingConstants.CENTER);
        loginPanel.add(statusLabel);
        
        // New user registration link
        JLabel registerLabel = new JLabel("New user? Register");
        registerLabel.setFont(new Font("Arial", Font.PLAIN, 12));
        registerLabel.setForeground(new Color(0, 120, 215));
        registerLabel.setBounds(0, 315, 380, 20);
        registerLabel.setHorizontalAlignment(SwingConstants.CENTER);
        
        // Add underline to the registration text
        Font regFont = registerLabel.getFont();
        Map<TextAttribute, Object> regAttributes = new HashMap<>(regFont.getAttributes());
        regAttributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        registerLabel.setFont(regFont.deriveFont(regAttributes));
        
        registerLabel.setCursor(new Cursor(Cursor.HAND_CURSOR));
        registerLabel.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                JOptionPane.showMessageDialog(LoginScreen.this, 
                        "Registration form will be opened here.", 
                        "Register New User", 
                        JOptionPane.INFORMATION_MESSAGE);
            }
        });
        loginPanel.add(registerLabel);
    }
    
    private BufferedImage createGradientBackground(int width, int height) {
        BufferedImage image = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
        Graphics2D g2d = image.createGraphics();
        
        // Create a gradient paint from dark blue to light blue
        GradientPaint gp = new GradientPaint(
            0, 0, new Color(20, 30, 60), 
            0, height, new Color(100, 140, 200)
        );
        
        g2d.setPaint(gp);
        g2d.fillRect(0, 0, width, height);
        g2d.dispose();
        
        return image;
    }
    
    // Panel class for background image
    class BackgroundPanel extends JPanel {
        private BufferedImage image;
        
        public BackgroundPanel(BufferedImage image) {
            this.image = image;
            setOpaque(false);
        }
        
        @Override
        protected void paintComponent(Graphics g) {
            super.paintComponent(g);
            g.drawImage(image, 0, 0, getWidth(), getHeight(), this);
        }
    }
    
    public static void main(String[] args) {
        try {
            // Set a nicer look and feel
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                new LoginScreen();
            }
        });
    }
}
