private void showChangePasswordDialog() {
        JDialog dialog = new JDialog(this, "Change PIN", true);
        dialog.setLayout(new BorderLayout(10, 10));
        dialog.setSize(400, 250);
        dialog.setLocationRelativeTo(this);

        JPanel contentPanel = new JPanel();
        contentPanel.setLayout(new BoxLayout(contentPanel, BoxLayout.Y_AXIS));
        contentPanel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));

        // PIN Field with Document Listener for validation
        JPasswordField pinField = new JPasswordField(4);
        pinField.setMaximumSize(new Dimension(100, 30));
        pinField.setHorizontalAlignment(JTextField.CENTER);
        pinField.setFont(new Font("Arial", Font.PLAIN, 16));

        // Info Label
        JLabel infoLabel = new JLabel("Enter 4-digit PIN");
        infoLabel.setFont(new Font("Arial", Font.PLAIN, 14));
        infoLabel.setAlignmentX(Component.CENTER_ALIGNMENT);

        // Validation Label
        JLabel validationLabel = new JLabel(" ");
        validationLabel.setFont(new Font("Arial", Font.ITALIC, 12));
        validationLabel.setForeground(Color.RED);
        validationLabel.setAlignmentX(Component.CENTER_ALIGNMENT);

        // Add document listener for real-time validation
        pinField.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) { validatePin(); }
            public void insertUpdate(DocumentEvent e) { validatePin(); }
            public void removeUpdate(DocumentEvent e) { validatePin(); }

            private void validatePin() {
                String pin = new String(pinField.getPassword());
                if (pin.length() > 4) {
                    pinField.setText(pin.substring(0, 4));
                    return;
                }
                
                if (!pin.matches("\\d*")) {
                    validationLabel.setText("Only digits are allowed");
                    pinField.setText(pin.replaceAll("\\D", ""));
                } else if (pin.length() < 4) {
                    validationLabel.setText("PIN must be 4 digits");
                } else if (pin.length() == 4) {
                    validationLabel.setText(" ");
                }
            }
        });

        // Only allow numeric input
        pinField.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (!Character.isDigit(c) || 
                    pinField.getPassword().length >= 4) {
                    e.consume();
                }
            }
        });

        JButton changeButton = new JButton("Change PIN");
        changeButton.setMaximumSize(new Dimension(150, 30));
        changeButton.setAlignmentX(Component.CENTER_ALIGNMENT);

        changeButton.addActionListener(e -> {
            String pin = new String(pinField.getPassword());
            if (pin.length() == 4 && pin.matches("\\d{4}")) {
                if (updateUserPassword(currentUserSoeid, pin)) {
                    JOptionPane.showMessageDialog(dialog,
                        "PIN updated successfully",
                        "Success",
                        JOptionPane.INFORMATION_MESSAGE);
                    dialog.dispose();
                }
            } else {
                validationLabel.setText("Please enter a valid 4-digit PIN");
            }
        });

        // Add components
        contentPanel.add(infoLabel);
        contentPanel.add(Box.createVerticalStrut(20));
        contentPanel.add(pinField);
        contentPanel.add(Box.createVerticalStrut(5));
        contentPanel.add(validationLabel);
        contentPanel.add(Box.createVerticalStrut(20));
        contentPanel.add(changeButton);

        dialog.add(contentPanel);
        dialog.setVisible(true);
    }
