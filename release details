endDateChooser.addPropertyChangeListener("date", evt -> {
        if (endDateChooser.getDate() != null && startDateChooser.getDate() != null) {
            if (endDateChooser.getDate().before(startDateChooser.getDate())) {
                JOptionPane.showMessageDialog(createReleasePanel,
                    "End date cannot be before start date",
                    "Invalid Date",
                    JOptionPane.ERROR_MESSAGE);
                endDateChooser.setDate(null);
            } else {
                releaseDetailsButton.setVisible(true);  // Show Release Details button first
            }
        }
    });

    // Add Release Details button before Submit button
    JButton releaseDetailsButton = new JButton("Release Details");
    releaseDetailsButton.setFont(new Font("Arial", Font.PLAIN, 14));
    releaseDetailsButton.setAlignmentX(Component.CENTER_ALIGNMENT);
    releaseDetailsButton.setPreferredSize(new Dimension(200, 35));
    releaseDetailsButton.setMaximumSize(new Dimension(200, 35));
    releaseDetailsButton.setVisible(false);

    releaseDetailsButton.addActionListener(e -> {
        if (showReleaseDetailsPopup()) {
            submitButton.setVisible(true);
        }


// Modify the submit button action listener in showCreateReleaseScreen method
    submitButton.addActionListener(e -> {
        if (validateFields(nameField, startDateChooser, endDateChooser)) {
            try {
                ProjectItem selectedProject = (ProjectItem) projectDropdown.getSelectedItem();
                int projectId = selectedProject.getId();
                String releaseName = nameField.getText().trim();
                
                // Format dates for command line arguments
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                String startDate = dateFormat.format(startDateChooser.getDate());
                String endDate = dateFormat.format(endDateChooser.getDate());

                // Call Zephyr.java with parameters
                ProcessBuilder processBuilder = new ProcessBuilder(
                    "java",
                    "Zephyr",
                    releaseName,
                    String.valueOf(projectId),
                    startDate,
                    endDate
                );
                
                // For debugging - print the command
                System.out.println("Executing command: " + String.join(" ", processBuilder.command()));
                
                Process process = processBuilder.start();
                int exitCode = process.waitFor();
                
                if (exitCode == 0) {
                    JOptionPane.showMessageDialog(this,
                        "Release created successfully!",
                        "Success",
                        JOptionPane.INFORMATION_MESSAGE);
                    cardLayout.show(mainPanel, "ZEPHYR");
                } else {
                    // Read error stream for better error reporting
                    try (BufferedReader reader = new BufferedReader(
                            new InputStreamReader(process.getErrorStream()))) {
                        String errorMessage = reader.lines().collect(Collectors.joining("\n"));
                        JOptionPane.showMessageDialog(this,
                            "Error in Zephyr process: " + errorMessage,
                            "Error",
                            JOptionPane.ERROR_MESSAGE);
                    }
                }
            } catch (Exception ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this,
                    "Error: " + ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            }
        }
    });
