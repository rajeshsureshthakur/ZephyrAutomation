private void loadUserReleasesZephyr(int selectedProjectId) {
    final int BATCH_SIZE = 100; // Adjust as needed for performance tuning
    int count = 0;

    try {
        Class.forName("oracle.jdbc.driver.OracleDriver");

        try (Connection conn = DriverManager.getConnection(DB_URL, DB_USER, DB_PASSWORD);
             Connection connZephyr = DriverManager.getConnection(ZDB_URL, ZDB_USER, ZDB_PASSWORD)) {

            // Disable auto-commit for batch performance
            conn.setAutoCommit(false);

            String selectSql = "SELECT * FROM ITCC.RELEASES WHERE PROJECT_ID = ?";
            String insertSql = "INSERT INTO TARGET_TABLE (PROJECT_ID, RELEASE_ID, RELEASE_NAME, START_DATE, END_DATE) " +
                               "VALUES (?, ?, ?, ?, ?)";

            try (PreparedStatement pstmt = connZephyr.prepareStatement(selectSql);
                 PreparedStatement pstmt1 = conn.prepareStatement(insertSql)) {

                pstmt.setInt(1, selectedProjectId);

                try (ResultSet rs = pstmt.executeQuery()) {
                    while (rs.next()) {
                        pstmt1.setInt(1, selectedProjectId);
                        pstmt1.setInt(2, rs.getInt("ID"));
                        pstmt1.setString(3, rs.getString("NAME"));
                        pstmt1.setDate(4, rs.getDate("START_DATE"));
                        pstmt1.setDate(5, rs.getDate("END_DATE"));
                        pstmt1.addBatch();

                        count++;

                        // Execute in batches
                        if (count % BATCH_SIZE == 0) {
                            pstmt1.executeBatch();
                            conn.commit(); // Commit each batch
                        }
                    }

                    // Execute any remaining records
                    if (count % BATCH_SIZE != 0) {
                        pstmt1.executeBatch();
                        conn.commit();
                    }
                }
            }
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
}
