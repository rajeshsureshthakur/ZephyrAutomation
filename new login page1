import javax.swing.*;
import javax.swing.border.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class LoginScreen {

    public static void main(String[] args) {
        // Create the frame for the login screen
        JFrame frame = new JFrame("Login Screen");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(400, 300); // Size of the window
        frame.setLocationRelativeTo(null); // Center the window on the screen

        // Create a panel for the login form
        JPanel panel = new JPanel();
        panel.setLayout(null);  // Using null layout for custom positioning
        panel.setBackground(new Color(255, 255, 255)); // Background color

        // Title label
        JLabel titleLabel = new JLabel("Login", JLabel.CENTER);
        titleLabel.setFont(new Font("Arial", Font.BOLD, 24));
        titleLabel.setBounds(150, 20, 100, 30);
        panel.add(titleLabel);

        // Username label and text field
        JLabel userLabel = new JLabel("Username:");
        userLabel.setBounds(50, 70, 100, 30);
        panel.add(userLabel);

        JTextField userTextField = new JTextField();
        userTextField.setBounds(150, 70, 200, 30);
        userTextField.setBorder(new RoundedBorder(15)); // Rounded border with radius of 15
        panel.add(userTextField);

        // Password label and password field
        JLabel passwordLabel = new JLabel("Password:");
        passwordLabel.setBounds(50, 110, 100, 30);
        panel.add(passwordLabel);

        JPasswordField passwordField = new JPasswordField();
        passwordField.setBounds(150, 110, 200, 30);
        passwordField.setBorder(new RoundedBorder(15)); // Rounded border with radius of 15
        panel.add(passwordField);

        // Login button
        JButton loginButton = new JButton("Login");
        loginButton.setBounds(250, 170, 100, 40);
        loginButton.setFont(new Font("Arial", Font.PLAIN, 16));
        loginButton.setBackground(new Color(34, 167, 240)); // Light blue color
        loginButton.setForeground(Color.WHITE);
        loginButton.setFocusPainted(false);
        loginButton.setBorder(BorderFactory.createRoundedBorder(10)); // Rounded corners
        panel.add(loginButton);

        // Register link
        JLabel registerLabel = new JLabel("Don't have an account? Register here.");
        registerLabel.setForeground(Color.BLUE);
        registerLabel.setBounds(100, 220, 200, 20);
        registerLabel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR)); // Makes it look like a link
        panel.add(registerLabel);

        // Forgot password link
        JLabel forgotPasswordLabel = new JLabel("Forgot your password?");
        forgotPasswordLabel.setForeground(Color.BLUE);
        forgotPasswordLabel.setBounds(120, 240, 200, 20);
        forgotPasswordLabel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR)); // Makes it look like a link
        panel.add(forgotPasswordLabel);

        // Add panel to frame
        frame.add(panel);
        
        // Show the frame
        frame.setVisible(true);

        // Action listeners for the links (you can implement the actions later)
        registerLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JOptionPane.showMessageDialog(frame, "Register functionality here.");
            }
        });

        forgotPasswordLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JOptionPane.showMessageDialog(frame, "Forgot Password functionality here.");
            }
        });

        // Action listener for the Login button
        loginButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String username = userTextField.getText();
                String password = new String(passwordField.getPassword());

                if (username.isEmpty() || password.isEmpty()) {
                    JOptionPane.showMessageDialog(frame, "Please enter both username and password", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(frame, "Login successful", "Success", JOptionPane.INFORMATION_MESSAGE);
                    // You can add your authentication logic here
                }
            }
        });
    }

    // Custom class to create a rounded border
    public static class RoundedBorder implements Border {
        private int radius;

        public RoundedBorder(int radius) {
            this.radius = radius;
        }

        @Override
        public Insets getBorderInsets(Component c) {
            return new Insets(this.radius + 1, this.radius + 1, this.radius + 2, this.radius + 1);
        }

        @Override
        public boolean isBorderOpaque() {
            return true;
        }

        @Override
        public void paintBorder(Component c, Graphics g, int x, int y, int width, int height) {
            g.setColor(Color.GRAY);  // You can customize the border color
            g.fillRoundRect(x, y, width - 1, height - 1, radius, radius);
        }
    }
}
