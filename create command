createButton.addActionListener(e -> {
        if (validateFields(nameField, startDateChooser, endDateChooser)) {
            // Disable the button while processing
            createButton.setEnabled(false);
            
            try {
                // Get all required values
                String zephyrToken = getZephyrToken(currentUserSoeid);
                if (zephyrToken == null) {
                    JOptionPane.showMessageDialog(this,
                        "Zephyr token not found for user",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
                    return;
                }

                ProjectItem selectedProject = (ProjectItem) projectDropdown.getSelectedItem();
                int projectId = selectedProject.getId();
                String releaseName = nameField.getText().trim();
                String foldersString = childField.getText().trim();
                
                // Format dates
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                String startDate = dateFormat.format(startDateChooser.getDate());
                String endDate = dateFormat.format(endDateChooser.getDate());

                // Show processing message
                JDialog processingDialog = new JDialog(this, "Processing", true);
                JPanel panel = new JPanel();
                panel.add(new JLabel("Creating release... Please wait"));
                processingDialog.add(panel);
                processingDialog.setSize(300, 100);
                processingDialog.setLocationRelativeTo(this);

                // Create and run in separate thread
                SwingWorker<Void, Void> worker = new SwingWorker<>() {
                    @Override
                    protected Void doInBackground() throws Exception {
                        ReleaseCreation fetcher = new ReleaseCreation(
                            currentUserSoeid,
                            zephyrToken,
                            projectId,
                            releaseName,
                            foldersString,
                            startDate,
                            endDate,
                            testCycles[0],
                            testCycles[1],
                            testCycles[2],
                            testCycles[3]
                        );

                        fetcher.run();
                        return null;
                    }

                    @Override
                    protected void done() {
                        processingDialog.dispose();
                        try {
                            get(); // Will throw exception if one occurred during execution
                            JOptionPane.showMessageDialog(null,
                                "Release created successfully!",
                                "Success",
                                JOptionPane.INFORMATION_MESSAGE);
                            cardLayout.show(mainPanel, "ZEPHYR");
                        } catch (Exception ex) {
                            ex.printStackTrace();
                            JOptionPane.showMessageDialog(null,
                                "Error: " + ex.getMessage(),
                                "Error",
                                JOptionPane.ERROR_MESSAGE);
                        } finally {
                            createButton.setEnabled(true);
                        }
                    }
                };

                // Start the worker and show processing dialog
                worker.execute();
                processingDialog.setVisible(true);

            } catch (Exception ex) {
                createButton.setEnabled(true);
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this,
                    "Error: " + ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            }
        }
    });
