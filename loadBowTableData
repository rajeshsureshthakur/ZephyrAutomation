private JButton viewBowButton;  // Add as class field

// Add this to your initialization code
viewBowButton = new JButton("View My BOW");
viewBowButton.addActionListener(e -> showBowTableScreen());

private void showBowTableScreen() {
   JPanel bowPanel = new JPanel(new BorderLayout());
   
   JLabel titleLabel = new JLabel("BOW Test Cases");
   titleLabel.setFont(new Font("Arial", Font.BOLD, 24));
   JPanel titlePanel = new JPanel();
   titlePanel.add(titleLabel);

   DefaultTableModel bowModel = new DefaultTableModel() {
       @Override
       public boolean isCellEditable(int row, int column) {
           return false;  // Make cells non-editable
       }
   };

   // Add columns
   String[] columns = {"Test Case", "Status", "Primary Application", 
                      "Capability", "Business Area", "Criticality", "Scrum Team"};
   for (String column : columns) {
       bowModel.addColumn(column);
   }

   JTable bowTable = new JTable(bowModel);
   bowTable.setFont(new Font("Arial", Font.PLAIN, 12));
   bowTable.setRowHeight(25);
   bowTable.getTableHeader().setFont(new Font("Arial", Font.BOLD, 12));

   // Set column widths
   TableColumnModel columnModel = bowTable.getColumnModel();
   int[] columnWidths = {150, 100, 200, 150, 150, 100, 150};
   for (int i = 0; i < columnWidths.length; i++) {
       columnModel.getColumn(i).setPreferredWidth(columnWidths[i]);
   }

   loadBowTableData(bowModel);

   JScrollPane scrollPane = new JScrollPane(bowTable);
   scrollPane.setPreferredSize(new Dimension(1200, 800));

   JButton backButton = new JButton("Back");
   backButton.addActionListener(e -> cardLayout.show(mainPanel, "ZEPHYR"));

   JPanel buttonPanel = new JPanel();
   buttonPanel.add(backButton);

   bowPanel.add(titlePanel, BorderLayout.NORTH);
   bowPanel.add(scrollPane, BorderLayout.CENTER);
   bowPanel.add(buttonPanel, BorderLayout.SOUTH);

   mainPanel.add(bowPanel, "BOW_TABLE");
   cardLayout.show(mainPanel, "BOW_TABLE");
}

private void loadBowTableData(DefaultTableModel model) {
   try {
       Class.forName("oracle.jdbc.driver.OracleDriver");
       try (Connection conn = DriverManager.getConnection(DB_URL, DB_USER, DB_PASSWORD)) {
           String sql = "SELECT * FROM ZEPHYRSTATS WHERE RELEASE_ID = ?";
           try (PreparedStatement pstmt = conn.prepareStatement(sql)) {
               pstmt.setInt(1, selectedRelease.getId());
               try (ResultSet rs = pstmt.executeQuery()) {
                   while (rs.next()) {
                       model.addRow(new Object[]{
                           rs.getString("TESTCASE"),
                           rs.getString("STATUS"),
                           rs.getString("PRIMARY_APPLICATION"),
                           rs.getString("CAPABILITY"),
                           rs.getString("BUSINESS_AREA"),
                           rs.getString("CRITICALITY"),
                           rs.getString("SCRUM_TEAM")
                       });
                   }
               }
           }
       }
   } catch (Exception e) {
       e.printStackTrace();
       JOptionPane.showMessageDialog(null,
           "Error loading data: " + e.getMessage(),
           "Database Error",
           JOptionPane.ERROR_MESSAGE);
   }
}
