private boolean registerUser(String name, String soeid, String pin, String role,
                           String managerSoeid, int teamId, int projectId) {
    try {
        Class.forName("oracle.jdbc.driver.OracleDriver");
        try (Connection conn = DriverManager.getConnection(DB_URL, DB_USER, DB_PASSWORD)) {
            
            // If role is Lead or Tester, get the manager's user_id first
            Integer managerId = null;
            if (!"Manager".equals(role) && !managerSoeid.isEmpty()) {
                String managerQuery = "SELECT USER_ID FROM USERS WHERE SOEID = ?";
                try (PreparedStatement managerStmt = conn.prepareStatement(managerQuery)) {
                    managerStmt.setString(1, managerSoeid);
                    ResultSet rs = managerStmt.executeQuery();
                    if (rs.next()) {
                        managerId = rs.getInt("USER_ID");
                    } else {
                        JOptionPane.showMessageDialog(this,
                            ("Tester".equals(role) ? "Lead" : "Manager") + " SOEID not found!",
                            "Error",
                            JOptionPane.ERROR_MESSAGE);
                        return false;
                    }
                }
            }

            // Insert new user
            String sql = "INSERT INTO USERS (SOEID, PASSWORD, USER_NAME, USER_ROLE, " +
                        "MANAGER_SOEID, MANAGER_ID, USER_TEAM, PROJECT_ID) " +
                        "VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
            try (PreparedStatement pstmt = conn.prepareStatement(sql)) {
                pstmt.setString(1, soeid);
                pstmt.setString(2, pin);
                pstmt.setString(3, name);
                pstmt.setString(4, role);
                pstmt.setString(5, "Manager".equals(role) ? null : managerSoeid);
                if (managerId != null) {
                    pstmt.setInt(6, managerId);
                } else {
                    pstmt.setNull(6, java.sql.Types.INTEGER);
                }
                pstmt.setInt(7, teamId);
                pstmt.setInt(8, projectId);
                
                pstmt.executeUpdate();
                return true;
            }
        }
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this,
            "Registration error: " + e.getMessage(),
            "Error",
            JOptionPane.ERROR_MESSAGE);
        return false;
    }
    return false;
}
